   <link href="{{asset('fonts/googlefonts.css')}}" rel="stylesheet">
	<link href="{{asset('bootstrap/css/bootstrap.min.css')}}" rel="stylesheet">
    <link href="{{asset('select2/dist/css/select2.min.css')}}" rel="stylesheet" />

///----------------------
    <script src="{{asset('jquery/jquery.min.js')}}"></script>
    <script src="{{asset('select2/dist/js/select2.min.js')}}"></script>
	<script src="{{asset('bootstrap/js/bootstrap.min.js')}}"></script>
    


  

///-----------
 <script src="{{asset('jquery_val/dist/jquery.validate.min.js')}}"></script>
 <script src="{{asset('datatable/datatables.min.js')}}"></script>
///-----------

<link rel="stylesheet" href="{{asset('datepicker/css/datepicker.css')}}"/>
<script src="{{asset('datepicker/js/bootstrap-datepicker.js')}}"></script>

///-----------

    datetime-local
    
    value="{{date('Y-m-d H:i:s')}}" 






@extends('layout.main')

@section('content')
</head>
<body id="bodysellcorner">
</body>
</html>
@endsection
        

Log::channel('borokorosh')->info('Pathology Bill  Updated',
[
    'massage'=> 'Pathology Bill  Updated',
    'employee_details'=> Auth::user(),
	'Info'=> $request->all(),
]);


public function store(Request $request)
{
	return response()->json(['success' => $request->all()]);
	
	
	DB::transaction(function () use ($request) {
		
		

	$validated = $request->validate([
	
		'customer_id',
		'unit_price',
		'quantity',
		'stock',
		'vat',
		'vattk',
		'discount',
		'totaldiscount',
		'amount',
		'adjust',
		'percentofdicountontaotal',
		'grossamount',
		'discountatend',
		'paid',
		'due',
		'totalamount',
		'statusvalue',
		'medicine_name',
		'dataentry',	
	]);
	



	///// Check korche jodi quantityr poriman stock theke beshi hoy 
		for ($product_id = 0; $product_id < count($request->medicine_name); $product_id++ ) {
		
			$desired_qun=0;
	$product_id_access_the_medicine_id_in_this_current_itteration = $request->medicine_name[$product_id];

	for ($id = 0; $id < count($request->medicine_name); $id++ ) 
	{
		
		if ($request->medicine_name[$id] == $product_id_access_the_medicine_id_in_this_current_itteration )
		$desired_qun = $desired_qun + $request->quantity[$id] ;
		
	}

	$stcok_amount_of_medicine=  medicine::where('id',$request->medicine_name[$product_id] )->pluck('stock')->first();



	
	if ( $stcok_amount_of_medicine < $desired_qun )
	{ 
		global	$jsonmessage;
		$jsonmessage=1;
			goto flag;
	}
	 }
		if ( ($request->customer_id == '')   and ($request->regcustomer == '')  and ($request->excus == '' )  )
		{
		$patient = new patient() ; 
		$patient->name = $request->name;
		$patient->mobile = $request->mobile;
		$patient->age = $request->age;
		$patient->sex = $request->sex;
		$patient->address = $request->address;
		$patient->booking_status = 5;
		$patient->save();
		
		$patientid = $patient->id;
		}
		else if ($request->excus == 1 ) 
		{
		$patientid = 1;
			
		}
		else if  ($request->customer_id != '')    
		{
		$patientid = $request->customer_id;	
		}
		else if ($request->regcustomer != '')    
		{
		$patientid = $request->regcustomer;	
		}
	
		global $status;
		if ($request->statusvalue == 0 )
		{
			$status = 0;
		}

		$patient = patient::findOrFail($patientid);	
	
		if($request->adjustwithadvancedeposit == 1 )
		{	
				$remainging = $patient->dena - $request->due;
				
				if ( ($remainging > 0) or ($remainging == 0))
				{
					
					$adjust_advance = $request->due;
				$request->due =0;
				
				patient::where('id', $patientid )
			->update([
				'dena' => $remainging
				
				]);	
					
				}
				if ($remainging < 0)
				{
				
					$adjust_advance = $patient->dena;
					$request->due =  -1 * $remainging ;
						patient::where('id', $patientid )
			->update([
				'dena' => 0
				
				]);		
					
					
					
		} } else{
			$adjust_advance =0;
				
			
		}			
	
			$order = new order; 
			$order->user_id  = auth()->user()->id ; //$request->sellerid;
			$order->patient_id  = $patientid; 
			$order->pay_by_adv =	$adjust_advance;	
			$order->due =	$request->due;
			$due = $request->due;
			$id= $patientid ;
	
			$patient_due = patient::where('id', $patientid )->pluck('due')->first();

			$patient_due = $patient_due + $due; 

	//// update patient due 
		patient::where('id', $patientid )
			->update([
				'due' => $patient_due
				]);

	/////////// update company balance 

		$balance =  balance_of_business::first();
		
		balance_of_business::where('id', 1)
		->update(['balance' =>( $request->paid + $balance->balance)  ]);	


		$order->totalbeforediscount  =	$request->grossamount;
		$order->discount  =	$request->discountatend;

		$order->pay_in_cash  =	$request->paid;
		$order->total  = $request->totalamount;
		$order->created_at  = $request->dataentry;
		$order->save();

		if($request->due > 0)
		{
		$duetransition = new duetransition();
		$duetransition->patient_id = $patientid;
		$duetransition->user_id = auth()->user()->id ;
		$duetransition->totalamount = $request->due;
		$duetransition->amount = $request->due;
		$duetransition->transitiontype	= 2;
		$duetransition->transitionproducttype	= 2;	
		$duetransition->order_id	= $order->id;
		$duetransition->duepaidfor	= 1;
		$duetransition->created_at  = $request->dataentry;
		$duetransition->comment	=  "Medicine sale Due: from Patinet ID: ".$patientid. " Medicine Order ID: "   .$order->id;
		
		
		$duetransition->save();
		
		}

		$order_id = $order->id;

		for ($product_id = 0; $product_id < count($request->medicine_name); $product_id++ ) 

		{

			
			
			
				
			
			
			
		$medicinetransition = new medicinetransition; 
		$medicinetransition->order_id = $order_id;
		
		$medicinetransition->medicine_id = $request->medicine_name[$product_id]; // asole medicine_name[] er vetore id neya hoyeche. form bananor somoy name lekha hoyechecilo pore ar change kora hoy nai 
			$medicinetransition->unit = $request->quantity[$product_id];
			medicine::where('id',$request->medicine_name[$product_id] )->decrement('stock',$request->quantity[$product_id] );
			
			
			$medicinetransition->vat = $request->vat[$product_id];
			$medicinetransition->unitprice = $request->unit_price[$product_id];    
			$medicinetransition->totalvat = $request->vattk[$product_id];
			
			$qun= $request->quantity[$product_id];
			
					if ($request->percentofdicountontaotal > 0)
			{
				
				$discount = (($request->unit_price[$product_id] * $qun)* ($request->percentofdicountontaotal/100) ) ; 
				
			
				$amount = ($request->unit_price[$product_id] * $qun) - $discount; 
				
				$medicinetransition->discount = $request->percentofdicountontaotal;
				$medicinetransition->totaldiscount	 = $discount;
				
				
				$medicinetransition->amount = $request->amount[$product_id];
			$medicinetransition->adjust = $amount;
				
			}
			else {
					
			$medicinetransition->discount = $request->discount[$product_id];
			$medicinetransition->totaldiscount	 = $request->totaldiscount[$product_id];
			$medicinetransition->amount = $request->amount[$product_id];
			$medicinetransition->adjust = $request->adjust[$product_id];
			}
			
			$medicinetransition->created_at  = $request->dataentry;
			$medicinetransition->save(); 
			

		}		
	

			$patient_name = patient::findOrFail($patientid)->name;

			$cashtransition = new cashtransition();

			$cashtransition->patient_id = $patientid;

			$cashtransition->order_id = $order_id;
			$cashtransition->user_id =  auth()->user()->id ;
			$cashtransition->gorssamount = $request->grossamount;
			$cashtransition->discount = $request->discountatend;	
			$cashtransition->amount_after_discount = $request->totalamount;
			$cashtransition->deposit = $request->paid;
			$cashtransition->debit = 0;
			$cashtransition->credit = $request->paid;
			$cashtransition->description = "Medicine Bill from Patinet Name:" .$patient_name. " Patient ID: " .$patientid. " Medicine Order ID:" .$order_id ;
			$cashtransition->company_type = 1;

			$cashtransition->customer_type = 1;
			$cashtransition->transitionproducttype = 4; 
			$cashtransition->created_at  = $request->dataentry;
			$cashtransition->customer_baki = $request->due + $adjust_advance;
			$cashtransition->advance_deposit_minus = $adjust_advance;
			$cashtransition->customer_joma =0;
			$cashtransition->save();
					
			flag:
			});	
				//  return Redirect::back();
			global $jsonmessage;
			global $status; 

			if($status !=0 )
			{
				Log::channel('medicneTrinction')->info('Medicine Sales',
					[
						'massage'=> 'Medicine Sales',
						'employee_details'=> Auth::user(),
						'Info'=> $request->all(),
					]);
					return response()->json(['success' => 'You can not give commission to an Admitted patient']);
					
			}

			if($jsonmessage ==0 )
			{
				Log::channel('medicneTrinction')->info('Medicine Sales',
					[
						'massage'=> 'Medicine Sales',
						'employee_details'=> Auth::user(),
						'Info'=> $request->all(),
					]);
					return response()->json(['success' => 'Data Added successfully.']);
					
			}
			else{
			
			return response()->json(['error' => 'Products are not avilable in Stock']);	
			

			}


}

